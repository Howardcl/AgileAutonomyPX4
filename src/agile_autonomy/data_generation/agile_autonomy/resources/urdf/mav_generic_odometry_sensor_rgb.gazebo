<?xml version="1.0"?>
<!--
  Copyright 2015 Fadri Furrer, ASL, ETH Zurich, Switzerland
  Copyright 2015 Michael Burri, ASL, ETH Zurich, Switzerland
  Copyright 2015 Mina Kamel, ASL, ETH Zurich, Switzerland
  Copyright 2015 Janosch Nikolic, ASL, ETH Zurich, Switzerland
  Copyright 2015 Markus Achtelik, ASL, ETH Zurich, Switzerland

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<robot name="$(arg mav_name)" 
  xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- Instantiate the mav-->
  <!-- xacro:include filename="$(find rotors_description)/urdf/$(arg mav_name)_base.xacro" / -->
  <xacro:include filename="$(find agile_autonomy)/resources/urdf/$(arg mav_name)_base.xacro" />

  <!-- Mount a generic odometry sensor without odometry map (working everywhere). -->
  <xacro:odometry_plugin_macro namespace="${namespace}" odometry_sensor_suffix="1" parent_link="${namespace}/base_link" pose_topic="odometry_sensor1/pose" pose_with_covariance_topic="odometry_sensor1/pose_with_covariance" position_topic="odometry_sensor1/position" transform_topic="odometry_sensor1/transform" odometry_topic="odometry_sensor1/odometry" parent_frame_id="world" child_frame_id="${namespace}/odometry_sensor1" mass_odometry_sensor="0.00001" measurement_divisor="1" measurement_delay="0" unknown_delay="0.0" noise_normal_position="0 0 0" noise_normal_quaternion="0 0 0" noise_normal_linear_velocity="0 0 0" noise_normal_angular_velocity="0 0 0" noise_uniform_position="0 0 0" noise_uniform_quaternion="0 0 0" noise_uniform_linear_velocity="0 0 0" noise_uniform_angular_velocity="0 0 0" enable_odometry_map="false" odometry_map="" image_scale="">
    <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" />
    <!-- [kg m^2] [kg m^2] [kg m^2] [kg m^2] [kg m^2] [kg m^2] -->
    <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0" />
  </xacro:odometry_plugin_macro>

  <!-- RGB camera (distorted)-->
  <!-- <xacro:camera_macro_distorted namespace="${namespace}/rgb_camera" parent_link="${namespace}/base_link" camera_suffix="1" frame_rate="30.0" horizontal_fov="1.9258" image_width="424" image_height="400" image_format="R8G8B8" min_distance="0.02" max_distance="100.0" noise_mean="0.0" noise_stddev="0.0" enable_visual="true" enable_collision="false">
    <cylinder length="0.01" radius="0.007" />
    <origin xyz="0.3 0.0 -0.10" rpy="0.0 0.0 0.0" />
  </xacro:camera_macro_distorted> -->

  <!-- Depth camera -->
  <!-- <xacro:depth_camera_macro namespace="${namespace}/depth_camera" parent_link="${namespace}/base_link" camera_suffix="2" frame_rate="30.0" horizontal_fov="1.9258" image_width="424" image_height="400" image_format="L8" min_distance="0.02" max_distance="100.0" noise_mean="0.0" noise_stddev="0.0" enable_visual="true" enable_collision="false">
    <cylinder length="0.01" radius="0.007" />
    <origin xyz="0.3 0.0 -0.10" rpy="0.0 0.0 0.0" />
  </xacro:depth_camera_macro> -->

  <!-- RGB camera (ideal)-->
  <!-- xacro:camera_macro namespace="${namespace}/rgb_camera" parent_link="${namespace}/base_link" camera_suffix="1" frame_rate="30.0" horizontal_fov="1.5" image_width="320" image_height="240" image_format="R8G8B8" min_distance="0.02" max_distance="100.0" noise_mean="0.0" noise_stddev="0.0" enable_visual="true">
    <cylinder length="0.01" radius="0.007" />
    <origin xyz="0.3 0.0 -0.10" rpy="0.0 0.0 0.0" />
  </xacro:camera_macro -->

</robot>

